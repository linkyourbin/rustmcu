<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Esp32 on RUST MCU BLOG</title><link>http://localhost:1313/tags/esp32/</link><description>Recent content in Esp32 on RUST MCU BLOG</description><generator>Hugo -- 0.148.2</generator><language>en-us</language><lastBuildDate>Mon, 18 Aug 2025 15:38:56 +0800</lastBuildDate><atom:link href="http://localhost:1313/tags/esp32/index.xml" rel="self" type="application/rss+xml"/><item><title>配置ESP32模板工程，此后的所有工程均可按此流程配置</title><link>http://localhost:1313/esp32/esp-generate-template/</link><pubDate>Mon, 18 Aug 2025 15:38:56 +0800</pubDate><guid>http://localhost:1313/esp32/esp-generate-template/</guid><description>&lt;h1 id="使用esp-generate生成一个初始工程">使用&lt;code>esp-generate&lt;/code>生成一个初始工程&lt;/h1>
&lt;blockquote>
&lt;p>进行此实验前，务必先查看&lt;a href="http://localhost:1313/toolchain/stm32-dev-env-setup/" style="color: #e16054ff; font-weight: bold; font-style: italic;">基础环境搭建&lt;/a>，完成之后，继续完成&lt;a href="http://localhost:1313/toolchain/esp32-dev-setup/" style="color: #e16054ff; font-weight: bold; font-style: italic;">ESP32 Rust环境搭建&lt;/a>，&lt;/p>&lt;/blockquote>
&lt;ul>
&lt;li>完成以上步骤之后，来到合适的文件目录下，最好是新建一个目录用于存放工程，在此目录下打开终端，输入以下命令，并按下回车（&lt;code>Enter&lt;/code>）&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">esp-generate --chip&lt;span class="o">=&lt;/span>esp32c3 esp32c3_embassy_dht11_demo
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>稍微解释一下，上面这行命令的作用&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">esp3-generate &lt;span class="c1"># 调用该工具&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">--chip&lt;span class="o">=&lt;/span>esp32c3 &lt;span class="c1"># 传入参数，指定芯片具体名称&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">esp32c3_embassy_dht11_demo &lt;span class="c1"># 待生成工程的工程名，推荐使用snake_case（所有单词小写，以下划线分割单词）命名，这是一个传统，也是一个约定，否则可能会有警告&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>此时，命令行会打开一个类似&lt;code>GUI&lt;/code>的界面，使用键盘上的“上下左右”箭头来选择相应的&lt;code>feature&lt;/code>，高亮部分即代表待选中的&lt;code>feature&lt;/code>，按下回车（&lt;code>Enter&lt;/code>）则会选中此项&lt;code>feature&lt;/code>，并且在此&lt;code>feature&lt;/code>前显示&lt;span style="color: green;">✅&lt;/span>&lt;/p>
&lt;p>&lt;img loading="lazy" src="http://localhost:1313/esp32/esp32c3/esp-generate-00.png">&lt;/p>
&lt;p>&lt;code>feature&lt;/code>前带有&lt;span style="color: gray;">[▶]&lt;/span>符号，表示该&lt;code>feature&lt;/code>含有多个子&lt;code>feature&lt;/code>，使用箭头选中高亮，并且按下回车（&lt;code>Enter&lt;/code>）后，会打开新的界面。&lt;/p>
&lt;p>&lt;img loading="lazy" src="http://localhost:1313/esp32/esp32c3/esp-generate-01.png">&lt;/p>
&lt;p>此时，高亮区域选中了&lt;code>▶ Flashing, logging and debugging (espflash)&lt;/code>，按下回车（&lt;code>Enter&lt;/code>），来到新的界面。&lt;/p>
&lt;p>&lt;img loading="lazy" src="http://localhost:1313/esp32/esp32c3/esp-generate-02.png">&lt;/p>
&lt;p>选中下图的&lt;code>feature&lt;/code>，按照从上至下排序，当前选中了&lt;code>2&lt;/code>和&lt;code>3&lt;/code>。&lt;/p>
&lt;p>&lt;img loading="lazy" src="http://localhost:1313/esp32/esp32c3/esp-generate-03.png">&lt;/p>
&lt;p>注意：&lt;code>1&lt;/code>和&lt;code>2&lt;/code>只能二选一，工程里编写代码时也只能二选一，否则会报错。&lt;/p>
&lt;p>完成选定后，按下&lt;code>ESC&lt;/code>，返回主界面，继续开启&lt;code>feature&lt;/code>。&lt;/p>
&lt;p>此时，高亮区域选中了&lt;code>▶ Optional editor integration&lt;/code>，按下回车（&lt;code>Enter&lt;/code>），来到新的界面。&lt;/p>
&lt;p>&lt;img loading="lazy" src="http://localhost:1313/esp32/esp32c3/esp-generate-04.png">&lt;/p>
&lt;p>这个界面主要是选择你将要使用的编辑器，选定之后，可以自动配置工程适应编辑器，打开后不会报错，并且会推荐安装部分插件。&lt;/p>
&lt;p>&lt;img loading="lazy" src="http://localhost:1313/esp32/esp32c3/esp-generate-05.png">&lt;/p>
&lt;p>选定上图&lt;code>feature&lt;/code>后，继续按下&lt;code>ESC&lt;/code>，回到主界面。&lt;/p>
&lt;p>此时，我们已经选定了所有&lt;code>feature&lt;/code>，按下&lt;code>S&lt;/code>即&lt;code>Save&lt;/code>，即可保存并且生成工程。终端里也会有提示信息。&lt;/p>
&lt;p>&lt;img loading="lazy" src="http://localhost:1313/esp32/esp32c3/esp-generate-06.png">&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">🆗 Rust &lt;span class="o">(&lt;/span>stable&lt;span class="o">)&lt;/span>: 1.89.0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">🆗 espflash: 4.0.1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">🆗 probe-rs: 0.29.1
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>至此，创建工程模板就已经完成了，之后所有的工程模板都是一样的操作流程，不同时期配置的工具链，以上工具版本信息不一致是正常现象。&lt;/p></description></item><item><title>一分钟，搭建ESP32 Rust开发环境</title><link>http://localhost:1313/toolchain/esp32-dev-setup/</link><pubDate>Sun, 17 Aug 2025 13:49:27 +0800</pubDate><guid>http://localhost:1313/toolchain/esp32-dev-setup/</guid><description>&lt;h1 id="注意">注意&lt;/h1>
&lt;p>由于一部分工具链可以复用，理解为将之前的开发环境作为基座，所以不再要求从头开始单独配置&lt;code>ESP32&lt;/code>的开发环境，请先阅读完&lt;code>五分钟，带你从安装STM32 Rust嵌入式开发环境，到脱离苦海&lt;/code>这篇博客，再继续接下来的操作。&lt;/p>
&lt;hr>
&lt;h1 id="按照顺序执行以下命令">按照顺序，执行以下命令&lt;/h1>
&lt;p>只要完成了&lt;code>基座环境&lt;/code>的搭建，以下步骤就不会出错，故不再搭配图片说明。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 根据模板生成工程&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">cargo install esp-generate
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># esp32开发包安装工具&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">cargo binstall espup
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 安装esp32开发包&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">espup install
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 安装烧录工具&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">cargo install espflash
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="完成以上步骤之后esp32的开发环境就搭建完毕了恭喜你的技术栈又丰富了许多">完成以上步骤之后，&lt;code>ESP32&lt;/code>的开发环境就搭建完毕了。恭喜，你的技术栈又丰富了许多。&lt;/h2></description></item></channel></rss>